[tool.poetry]
name = "patreon-archiver"
version = "0.0.6"
description = "Save Patreon content you have access to."
authors = ["Andrew Udvare <audvare@gmail.com>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "patreon_archiver" }]

[tool.poetry.dependencies]
python = "^3.10"
click = "^8.1.3"
loguru = ">=0.6,<0.8"
requests = "^2.31.0"
mutagen = "^1.46.0"
yt-dlp = "^2023.6.22"
yt-dlp-types = "^0.0.1"

[tool.poetry.group.dev.dependencies]
mypy = "^1.0.1"
pylint = "^2.16.2"
pylint-quotes = "^0.2.3"
rope = "^1.7.0"
types-requests = "^2.28.11.14"
typing-extensions = "^4.5.0"
yapf = ">=0.33,<0.41"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
patreon-archiver = "patreon_archiver:main"

[tool.isort]
case_sensitive = true
combine_as_imports = true
from_first = true
order_by_type = true
use_parentheses = true

[tool.mypy]
disallow_incomplete_defs = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_untyped_decorators = true
disallow_subclassing_any = true
show_column_numbers = true
show_error_codes = true
strict_equality = true
strict_optional = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_ignores = true

[tool.pylint.main]
ignore = [".git", "node_modules"]
load-plugins = ["pylint_quotes"]

[tool.pylint.basic]
class-attribute-naming-style = "snake_case"
good-names = ["e", "f", "g", "i", "id", "j", "k", "m", "n", "x", "y", "z"]
include-naming-hint = true
inlinevar-naming-style = "snake_case"

[tool.pylint.design]
max-args = 8
max-branches = 15
max-locals = 30
max-statements = 80

[tool.pylint.format]
expected-line-ending-format = "LF"

[tool.pylint.logging]
logging-format-style = "new"
logging-modules = ["logging", "loguru"]

[tool.pylint."messages control"]
disable = [
  "missing-class-docstring",
  "missing-function-docstring",
  "missing-module-docstring",
  "unspecified-encoding",
  "use-dict-literal"
]

[tool.pylint.refactoring]
max-nested-blocks = 6

[tool.pylint.variables]
allow-global-unused-variables = false

[tool.yapf]
align_closing_bracket_with_visual_indent = true
allow_multiline_dictionary_keys = false
allow_multiline_lambdas = false
allow_split_before_dict_value = true
blank_line_before_class_docstring = false
blank_line_before_module_docstring = false
blank_line_before_nested_class_or_def = false
blank_lines_around_top_level_definition = 2
coalesce_brackets = true
column_limit = 100
continuation_align_style = "SPACE"
continuation_indent_width = 4
dedent_closing_brackets = false
disable_ending_comma_heuristic = false
each_dict_entry_on_separate_line = true
indent_dictionary_value = true
indent_width = 4
join_multiple_lines = true
no_spaces_around_selected_binary_operators = false
space_between_ending_comma_and_closing_bracket = false
spaces_around_default_or_named_assign = false
spaces_around_power_operator = true
spaces_before_comment = 2
split_all_comma_separated_values = false
split_arguments_when_comma_terminated = false
split_before_bitwise_operator = true
split_before_closing_bracket = true
split_before_dict_set_generator = true
split_before_dot = false
split_before_expression_after_opening_paren = false
split_before_first_argument = false
split_before_logical_operator = true
split_before_named_assigns = true
split_complex_comprehension = false
split_penalty_after_opening_bracket = 30
split_penalty_after_unary_operator = 10000
split_penalty_before_if_expr = 0
split_penalty_bitwise_operator = 300
split_penalty_comprehension = 80
split_penalty_excess_character = 7000
split_penalty_for_added_line_split = 30
split_penalty_import_names = 0
split_penalty_logical_operator = 300
use_tabs = false
